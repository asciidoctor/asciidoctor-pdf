name: CI
on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
  pull_request:
jobs:
  activate:
    if: "!endsWith(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - name: Proceed
      run: echo ok go
  lint:
    needs: activate
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7'
    - name: Configure Bundler
      run: |
        bundle config --local path .bundle/gems
        bundle config --local without coverage docs
    - name: Install dependencies
      run: bundle --jobs 3 --retry 3
    - name: Run linter
      run: bundle exec rake lint
  build:
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        ruby: [jruby-9.1, jruby-9.2, '2.3', '2.4', '2.5', '2.6', '2.7']
        asciidoctor-version: [~]
        prawn: [~]
        exclude:
        - os: ubuntu-latest
          ruby: '2.7'
        include:
        - os: ubuntu-latest
          ruby: '2.3'
          asciidoctor-version: '1.5.3'
        - os: ubuntu-latest
          ruby: '2.3'
          rouge-version: '~> 2.0.0'
        - os: ubuntu-latest
          ruby: '2.7'
          prawn: dev
        - os: ubuntu-latest
          ruby: '2.7'
          primary: true
    runs-on: ${{ matrix.os }}
    env:
      JRUBY_OPTS: '-J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-Xss2m -Xcompile.invokedynamic=false'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 5
    - name: Install Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - name: Configure Bundler
      run: |
        bundle config --local path .bundle/gems
        bundle config --local without coverage docs lint
    - name: Set Asciidoctor version override
      if: matrix.asciidoctor-version
      run: echo 'ASCIIDOCTOR_VERSION=${{ matrix.asciidoctor-version }}' >> $GITHUB_ENV
      shell: bash
    - name: Set Pygments version
      if: "!(matrix.os == 'windows-latest' && contains(matrix.ruby, 'jruby'))"
      run: echo 'PYGMENTS_VERSION=~> 1.2.0' >> $GITHUB_ENV
      shell: bash
    - name: Activate Gmagick
      if: matrix.primary
      run: |
        echo 'PRAWN_GMAGICK_VERSION=0.0.9' >> $GITHUB_ENV
        sudo apt-get install libgraphicsmagick1-dev
    - name: Set Rghost version / Install Ghostscript (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo 'RGHOST_VERSION=0.9.7' >> $GITHUB_ENV
        sudo apt-get install ghostscript poppler-utils
    - name: Install dependencies
      run: bundle --jobs 3 --retry 3
    - name: Switch to Prawn master
      if: matrix.prawn == 'dev'
      run: |
        bundle exec ruby scripts/switch-to-prawn-master.rb
        rm -f Gemfile.lock
        bundle config --local clean true
        bundle --jobs 3 --retry 3
    - name: Run tests
      run: bundle exec ruby -w $(bundle exec ruby -e 'print File.join Gem.bindir, %q(rake)') spec
